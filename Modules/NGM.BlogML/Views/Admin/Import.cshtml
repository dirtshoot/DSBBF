@model NGM.BlogML.ViewModels.ImportAdminViewModel
@using NGM.BlogML.ViewModels;

<h1>@Html.TitleForPage(T("Import A Blog").ToString())</h1>
<p>@T("Choose a BlogML file to upload, then click upload and import.")</p>
<p>@T("For any blog and blog post imported, the system can take up to five minute to perform a refresh of its slugs. Files being uploaded that are larger than 4mb may require modifications to the web.config.")</p>

@using(Html.BeginForm("Import", "Admin", FormMethod.Post, new { area = "NGM.BlogML", enctype = "multipart/form-data" })) { 
    @Html.ValidationSummary() 
    <fieldset>
		
        <fieldset>
            <legend>File Location</legend>
            <label for="MediaItemPath">@T("Local File Path <span> - multiple files must be in a zipped folder</span>")</label>
		    <input id="MediaItemPath" name="MediaItemPath" type="file" value="@T("Browse")" size="64"/>
            <span class="hint">@T("File can be either a valid BlogML xml file or a zip file that contains a valid BlogML xml file.")</span>

            <label for="Model_URLItemPath">@T("URL File Path")</label>
            @Html.TextBoxFor(m => m.Model.URLItemPath, new { @class = "textMedium" })
        </fieldset>

        <fieldset>
        <legend>Additional Import Settings</legend>
        @if (Model.Blogs != null && Model.Blogs.Count() >= 1) {
            <label for="importActions">@T("Select and existing blog to import import your file in to")</label>
            @T("<select id=\"importActions\" name=\"Model.BlogIdToImportInto\">")
            @Html.SelectOption(0, true, T("Choose action...").ToString())
            foreach (var item in Model.Blogs) {
                @Html.SelectOption(item.Key, false, T(item.Value).ToString())
            }
            @T("</select>")
            <span class="hint">@T("This behaviour will override the default behaviour of creating a new blog.")</span>
        }

        <label for="Model_SlugPattern">@T("SlugPattern")</label>
		@Html.TextBoxFor(m => m.Model.SlugPattern, new { @class = "textMedium" })
        <span class="hint">@T(@"For example: /([^/]+)\.aspx for aspx pages - Make blank if you want the post-url attribute to be used as is.")</span>
        <p>@T("A Slug is the title of your individual articles or pages. Sometimes this can be proceeded by *.aspx or *.php depending on how BlogML has been implemented at the time of export. You can define the slug pattern above which will help to identify individual articles/pages.")</p>

        <label for="Model_DefaultBlogSlug">@T("Default Blog Slug")</label>
        @Html.TextBoxFor(m => m.Model.DefaultBlogSlug, new { @class = "textMedium" })
        <span class="hint">@T("This behaviour will override the default behaviour of building the Blog Slug from the Title.")</span>
        </fieldset>
    </fieldset>
    <fieldset>
		<input type="submit" class="button" value="@T("Upload file and Import")" />
		@Html.AntiForgeryTokenOrchard()
	</fieldset>
}